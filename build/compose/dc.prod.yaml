services:
  redis:
    container_name: redis
    restart: always
    image: redis:alpine
    ports:
      - "6379:6379"

  db:
    container_name: db
    image: postgres:15.0-alpine
    restart: always
    env_file:
      - ./env/.env.prod
    ports:
      - "5432:5432"
    healthcheck:
      test: 'psql -w -U $POSTGRES_USER -d $POSTGRES_DB -h localhost -c "SELECT 1"'
      interval: 5s
      timeout: 30s
      retries: 3
      start_period: 15s
    volumes:
      - pgdata:/var/lib/postgresql/data

  app:
    container_name: app
    restart: unless-stopped
    image: app:latest
    volumes:
      - ../configs/prod.config.yaml:/app/local.config.yaml
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started

volumes:
  pgdata: